#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aleksa_Savic___Vizuelno_seminarski
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Pozoriste")]
	public partial class PozoristeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertZanimanje(Zanimanje instance);
    partial void UpdateZanimanje(Zanimanje instance);
    partial void DeleteZanimanje(Zanimanje instance);
    partial void InsertKarta(Karta instance);
    partial void UpdateKarta(Karta instance);
    partial void DeleteKarta(Karta instance);
    partial void InsertKorisnik(Korisnik instance);
    partial void UpdateKorisnik(Korisnik instance);
    partial void DeleteKorisnik(Korisnik instance);
    partial void InsertPredstava(Predstava instance);
    partial void UpdatePredstava(Predstava instance);
    partial void DeletePredstava(Predstava instance);
    #endregion
		
		public PozoristeDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PozoristeConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PozoristeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PozoristeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PozoristeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PozoristeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Zanimanje> Zanimanjes
		{
			get
			{
				return this.GetTable<Zanimanje>();
			}
		}
		
		public System.Data.Linq.Table<Karta> Kartas
		{
			get
			{
				return this.GetTable<Karta>();
			}
		}
		
		public System.Data.Linq.Table<Korisnik> Korisniks
		{
			get
			{
				return this.GetTable<Korisnik>();
			}
		}
		
		public System.Data.Linq.Table<Predstava> Predstavas
		{
			get
			{
				return this.GetTable<Predstava>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zanimanje")]
	public partial class Zanimanje : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nazivZanimanja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnazivZanimanjaChanging(string value);
    partial void OnnazivZanimanjaChanged();
    #endregion
		
		public Zanimanje()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazivZanimanja", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string nazivZanimanja
		{
			get
			{
				return this._nazivZanimanja;
			}
			set
			{
				if ((this._nazivZanimanja != value))
				{
					this.OnnazivZanimanjaChanging(value);
					this.SendPropertyChanging();
					this._nazivZanimanja = value;
					this.SendPropertyChanged("nazivZanimanja");
					this.OnnazivZanimanjaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Karta")]
	public partial class Karta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idPredstave;
		
		private int _idKorisnika;
		
		private EntityRef<Korisnik> _Korisnik;
		
		private EntityRef<Predstava> _Predstava;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidPredstaveChanging(int value);
    partial void OnidPredstaveChanged();
    partial void OnidKorisnikaChanging(int value);
    partial void OnidKorisnikaChanged();
    #endregion
		
		public Karta()
		{
			this._Korisnik = default(EntityRef<Korisnik>);
			this._Predstava = default(EntityRef<Predstava>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPredstave", DbType="Int NOT NULL")]
		public int idPredstave
		{
			get
			{
				return this._idPredstave;
			}
			set
			{
				if ((this._idPredstave != value))
				{
					if (this._Predstava.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPredstaveChanging(value);
					this.SendPropertyChanging();
					this._idPredstave = value;
					this.SendPropertyChanged("idPredstave");
					this.OnidPredstaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idKorisnika", DbType="Int NOT NULL")]
		public int idKorisnika
		{
			get
			{
				return this._idKorisnika;
			}
			set
			{
				if ((this._idKorisnika != value))
				{
					if (this._Korisnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidKorisnikaChanging(value);
					this.SendPropertyChanging();
					this._idKorisnika = value;
					this.SendPropertyChanged("idKorisnika");
					this.OnidKorisnikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Karta", Storage="_Korisnik", ThisKey="idKorisnika", OtherKey="id", IsForeignKey=true)]
		public Korisnik Korisnik
		{
			get
			{
				return this._Korisnik.Entity;
			}
			set
			{
				Korisnik previousValue = this._Korisnik.Entity;
				if (((previousValue != value) 
							|| (this._Korisnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Korisnik.Entity = null;
						previousValue.Kartas.Remove(this);
					}
					this._Korisnik.Entity = value;
					if ((value != null))
					{
						value.Kartas.Add(this);
						this._idKorisnika = value.id;
					}
					else
					{
						this._idKorisnika = default(int);
					}
					this.SendPropertyChanged("Korisnik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Predstava_Karta", Storage="_Predstava", ThisKey="idPredstave", OtherKey="id", IsForeignKey=true)]
		public Predstava Predstava
		{
			get
			{
				return this._Predstava.Entity;
			}
			set
			{
				Predstava previousValue = this._Predstava.Entity;
				if (((previousValue != value) 
							|| (this._Predstava.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Predstava.Entity = null;
						previousValue.Kartas.Remove(this);
					}
					this._Predstava.Entity = value;
					if ((value != null))
					{
						value.Kartas.Add(this);
						this._idPredstave = value.id;
					}
					else
					{
						this._idPredstave = default(int);
					}
					this.SendPropertyChanged("Predstava");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Korisnik")]
	public partial class Korisnik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ime;
		
		private string _prezime;
		
		private string _username;
		
		private string _pass;
		
		private string _tip;
		
		private EntitySet<Karta> _Kartas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnimeChanging(string value);
    partial void OnimeChanged();
    partial void OnprezimeChanging(string value);
    partial void OnprezimeChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OntipChanging(string value);
    partial void OntipChanged();
    #endregion
		
		public Korisnik()
		{
			this._Kartas = new EntitySet<Karta>(new Action<Karta>(this.attach_Kartas), new Action<Karta>(this.detach_Kartas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ime", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ime
		{
			get
			{
				return this._ime;
			}
			set
			{
				if ((this._ime != value))
				{
					this.OnimeChanging(value);
					this.SendPropertyChanging();
					this._ime = value;
					this.SendPropertyChanged("ime");
					this.OnimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prezime", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string prezime
		{
			get
			{
				return this._prezime;
			}
			set
			{
				if ((this._prezime != value))
				{
					this.OnprezimeChanging(value);
					this.SendPropertyChanging();
					this._prezime = value;
					this.SendPropertyChanged("prezime");
					this.OnprezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tip", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string tip
		{
			get
			{
				return this._tip;
			}
			set
			{
				if ((this._tip != value))
				{
					this.OntipChanging(value);
					this.SendPropertyChanging();
					this._tip = value;
					this.SendPropertyChanged("tip");
					this.OntipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Korisnik_Karta", Storage="_Kartas", ThisKey="id", OtherKey="idKorisnika")]
		public EntitySet<Karta> Kartas
		{
			get
			{
				return this._Kartas;
			}
			set
			{
				this._Kartas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kartas(Karta entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = this;
		}
		
		private void detach_Kartas(Karta entity)
		{
			this.SendPropertyChanging();
			entity.Korisnik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Predstava")]
	public partial class Predstava : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _imePredstave;
		
		private string _opisPredstave;
		
		private string _autorTeksta;
		
		private int _brojKarata;
		
		private EntitySet<Karta> _Kartas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnimePredstaveChanging(string value);
    partial void OnimePredstaveChanged();
    partial void OnopisPredstaveChanging(string value);
    partial void OnopisPredstaveChanged();
    partial void OnautorTekstaChanging(string value);
    partial void OnautorTekstaChanged();
    partial void OnbrojKarataChanging(int value);
    partial void OnbrojKarataChanged();
    #endregion
		
		public Predstava()
		{
			this._Kartas = new EntitySet<Karta>(new Action<Karta>(this.attach_Kartas), new Action<Karta>(this.detach_Kartas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imePredstave", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string imePredstave
		{
			get
			{
				return this._imePredstave;
			}
			set
			{
				if ((this._imePredstave != value))
				{
					this.OnimePredstaveChanging(value);
					this.SendPropertyChanging();
					this._imePredstave = value;
					this.SendPropertyChanged("imePredstave");
					this.OnimePredstaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opisPredstave", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string opisPredstave
		{
			get
			{
				return this._opisPredstave;
			}
			set
			{
				if ((this._opisPredstave != value))
				{
					this.OnopisPredstaveChanging(value);
					this.SendPropertyChanging();
					this._opisPredstave = value;
					this.SendPropertyChanged("opisPredstave");
					this.OnopisPredstaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_autorTeksta", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string autorTeksta
		{
			get
			{
				return this._autorTeksta;
			}
			set
			{
				if ((this._autorTeksta != value))
				{
					this.OnautorTekstaChanging(value);
					this.SendPropertyChanging();
					this._autorTeksta = value;
					this.SendPropertyChanged("autorTeksta");
					this.OnautorTekstaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brojKarata", DbType="Int NOT NULL")]
		public int brojKarata
		{
			get
			{
				return this._brojKarata;
			}
			set
			{
				if ((this._brojKarata != value))
				{
					this.OnbrojKarataChanging(value);
					this.SendPropertyChanging();
					this._brojKarata = value;
					this.SendPropertyChanged("brojKarata");
					this.OnbrojKarataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Predstava_Karta", Storage="_Kartas", ThisKey="id", OtherKey="idPredstave")]
		public EntitySet<Karta> Kartas
		{
			get
			{
				return this._Kartas;
			}
			set
			{
				this._Kartas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kartas(Karta entity)
		{
			this.SendPropertyChanging();
			entity.Predstava = this;
		}
		
		private void detach_Kartas(Karta entity)
		{
			this.SendPropertyChanging();
			entity.Predstava = null;
		}
	}
}
#pragma warning restore 1591
